// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Models.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210402160730_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.League", b =>
                {
                    b.Property<Guid>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LeagueName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LeagueId");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("TotalVouch")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.UserLeagueVouch", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<Guid>("LeagueId")
                        .HasColumnType("char(36)");

                    b.Property<uint>("Vouch")
                        .HasColumnType("int unsigned");

                    b.HasKey("UserId", "LeagueId");

                    b.HasIndex("LeagueId");

                    b.ToTable("UserLeagueVouches");
                });

            modelBuilder.Entity("Models.VouchUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("UserLeagueVouchLeagueId")
                        .HasColumnType("char(36)");

                    b.Property<ulong>("UserLeagueVouchUserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("UserVouchId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserLeagueVouchUserId", "UserLeagueVouchLeagueId");

                    b.ToTable("VouchUser");
                });

            modelBuilder.Entity("Models.UserLeagueVouch", b =>
                {
                    b.HasOne("Models.League", "League")
                        .WithMany("UserVouches")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.User", "User")
                        .WithMany("UserVouches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.VouchUser", b =>
                {
                    b.HasOne("Models.UserLeagueVouch", "UserLeagueVouch")
                        .WithMany("VouchedUsers")
                        .HasForeignKey("UserLeagueVouchUserId", "UserLeagueVouchLeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLeagueVouch");
                });

            modelBuilder.Entity("Models.League", b =>
                {
                    b.Navigation("UserVouches");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Navigation("UserVouches");
                });

            modelBuilder.Entity("Models.UserLeagueVouch", b =>
                {
                    b.Navigation("VouchedUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
